/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./LogMe_app/static/js/meal_log.js":
/*!*****************************************!*\
  !*** ./LogMe_app/static/js/meal_log.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nvar resultsBox = $('#results-box');\nvar resultsCard = document.getElementsByClassName($('.results-card'));\nvar noVis = document.getElementsByClassName($('.not-visible'));\nvar mealNameSearch = $('#search-form');\nvar delay_by_in_ms = 600;\nvar scheduled_function = false;\nvar endpoint1 = '/search';\nconsole.log(mealNameSearch);\n/* timeout for AJAX request */\n\nvar delayTimer;\n/* Tag elements in the tag container */\n\nvar tags;\n/* Food ID returned from Food API */\n\nvar foodId;\n/* Custom food ID for manual entries */\n\nvar randomAlphaNumeric = function randomAlphaNumeric() {\n  /* To string - base 32 - hexadecimal 0-9;a-v */\n  return Math.random().toString(32).slice(2);\n};\n/* Search term for the food API */\n\n\n$('#search-term').keyup(function () {\n  clearTimeout(delayTimer);\n  /* Text to display when searching for results */\n\n  $('#results-box').text('Loading search results');\n  delayTimer = setTimeout(function () {\n    var customFoodId = randomAlphaNumeric();\n    var text = $('#search-term').val();\n    var pic = new Image();\n    pic.src = '/static/img/no-image-icon-23494.png';\n    var food_image = document.createElement('img').appendChild(pic);\n    food_image.setAttribute('id', 'food-img');\n    /* passes user input to Django to query the api */\n\n    return $.ajax({\n      url: '/search',\n      data: {\n        'search_term': text\n      },\n      dataType: 'json',\n\n      /* Uses the text supplied by user input to parse the API. \n      On success the response will return a list from the food api as a table*/\n      success: function success(data) {\n        console.log(data);\n        var results = '';\n        /* Term entered by the user to appear at the top of the results table to allow for manual entries.*/\n\n        results += \"\\n        <div class = \\\"container\\\" id='searchResults'> \\n          <div class='table'>\\n          <table>\\n            <tr class=\\\"results\\\">\\n              <td colspan=\\\"6\\\" data-food-id=\\\"foodCustom_\".concat(text, \"1\\\" data-food-label=\\\"\").concat(text, \"\\\" data-custom='1'> \").concat(text, \"\\n              </td>\\n              <td>\\n                <div class=\\\"toggle-container\\\">\\n                  <div class='toggle-btn row'>\\n                    <div class='inner-circle'>\\n                    </div>\\n                  </div>\\n                </div>\\n              </td>\\n            </tr>\\n          \\n          </table>\\n        <div>\\n        <div class=\\\"instant-results\\\">\\n          <table id='searchTable'>\\n          \\n        \");\n        /* Returns the results from the food API as a table. */\n\n        data['hints'].forEach(function (meal) {\n          console.log(meal['food']['label']);\n          console.log(meal['food']['foodId']);\n          results += \"\\n          \\n          <tr class='instant-results'>\\n            <th id='brand-name' class='' colspan=\\\"1\\\"> Brand: \".concat(meal['food']['brand'], \"\\n            </th>\\n            <th colspan=\\\"2\\\"> Brand: \").concat(meal['food']['category'], \"\\n            </th>\\n          </tr>\\n          <tr class='results'>\\n            <td>\\n              <img id='food-img' class='mr-3' src=\\\"\").concat(meal['food']['image'], \"\\\" onerror=\\\"this.onerror=null;this.src='/static/img/no-image-icon-23494.png';\\\">\\n            </td>\\n            <td class ='' id='nmp' data-food-id='\").concat(meal['food']['foodId'], \"' data-food-label=\\\"\").concat(meal['food']['label'], \"\\\" data-custom='0'> \\n            \").concat(meal['food']['label'], \"\\n            </td>\\n            <td>\\n            <div class=\\\"toggle-container\\\">\\n              <div class='toggle-btn row'>\\n              \\n                <div class='inner-circle'>\\n                </div>\\n              </div>\\n              </div>\\n            </td>\\n          </tr>\\n        \");\n        });\n        results += \"\\n          </table>\\n          </div>\\n          </div>\\n          </div>\\n          </div>\\n          \";\n        /* Appends the table to the results-box element */\n\n        $('#results-box').html(results);\n        /* When clicking the inner-circle element, button will toggle horizontally indicating whether a tag was created for the foodLabel or not.*/\n\n        $('.inner-circle').on('click', function (e) {\n          /* e returns the inner-circle element*/\n\n          /* variable to reference the results returned from table holding the results returned from the API, foodID, FoodLabel, etc... */\n          var food = e.target.parentNode.parentNode.parentNode.previousElementSibling;\n          /* Variables to get the attributes from the parent node */\n\n          var foodLabel = food.getAttribute('data-food-label');\n          foodId = food.getAttribute('data-food-id');\n          var customEntry = food.getAttribute('data-custom');\n          tags = document.querySelectorAll('#mealTag');\n          console.log(tags);\n          var tagElement = '';\n          /* on click add the class 'active' to the parent div of inner-circle to signal the css*/\n\n          e.target.parentNode.classList.toggle('active');\n          /* If the parent div of the inner-cirlce contains 'active', create a tag using the foodLabel  */\n\n          if (e.target.parentNode.classList.contains('active')) {\n            // div for the tag<div class=\"tag\"></div>\n            tagElement += \"<div id = \\\"mealTag\\\" data-food-id=\\\"\".concat(foodId, \"\\\" data-food-label=\\\"\").concat(foodLabel, \"\\\" data-custom=\\\"\").concat(customEntry, \"\\\"> \").concat(foodLabel, \" <i class=\\\"material-icons\\\" id=\\\"close-icon\\\" data-item=\\\"js\\\">close</i></div>\");\n            /* Append the tag created inside of the tag-container div */\n\n            $('.tag-container').append(tagElement);\n          }\n          /* If the parent of the inner-circle does not contain 'active' or is deactivated (toggled off), if the tag is in the tag-container div, remove tag. */\n          else if (!e.target.parentNode.classList.contains('active')) {\n            // console.log(tags)\n            var tag = document.getElementById('mealTag');\n            /* reference to each element in the tag-container div */\n\n            for (var i = 0; mealElement = tags[i]; i++) {\n              /* Variable to get the foodId from the mealTag element */\n              var mealTagFoodId = mealElement.getAttribute('data-food-id');\n              console.log(mealTagFoodId);\n              /* If the foodId from the mealTag div is === to the foodId from the element in the table of results, remove tag.*/\n\n              if (mealTagFoodId === foodId) {\n                // console.log(mealElement)\n                // console.log(food)\n\n                /* remove tag from tag-container div */\n                mealElement.remove(mealElement);\n              }\n            }\n          }\n\n          console.log($('.tag-container').children());\n          $('.tag-container').on('click', '#close-icon', function () {\n            console.log($(this));\n            $(this).parent().remove();\n          }); // $('#tagSubmission').on('mousedown', mealFormSubmission = () =>{\n          //   forEach()\n          // })\n        });\n        var prepareMealLog;\n        $('#tagSubmission').on('mousedown', prepareMealLog = function prepareMealLog() {// let t = $(this).parent().find('div')\n          // console.log(t)\n        });\n      },\n      error: function error(err) {\n        console.log(err);\n      }\n    });\n  }, 600);\n}); // displays the results from the API\n\n$('#search-term').focus(function () {\n  if (!$('#results-box').hasClass('visible')) {\n    $('#results-box').removeClass('not-visible') && $('#results-box').addClass('visible');\n  }\n});\nvar calendarIcon = \"<i class=\\\"far fa-calendar\\\"></i>\";\n$('#id_date').append(calendarIcon); // {\n//   $.ajax({\n//     url: '/search',\n//     data:{\n//       'foodId':$(this).target.getAttribute('data-food-id')\n//     },\n//     method:'POST',\n//     dataType: 'json',\n//     success: function(data){\n//       console.log(foodId)\n//     }\n//   })\n// })\n// let logMeal_btn = document.getElementById(\"logMeal-btn\")\n// \n// $('.inner-circle').addEventListener(\"click\", addTags)\n// mealTag_label.appendChild(mealTag)\n// $('#logMeal-btn').(function(){\n//   $(this).element\n//   $('#mealTag').append(meaclickl['food']['label']);\n// });\n// }\n// $('#search-term').blur(function(){\n//   if ($('#results-box').hasClass('visible')){\n//     $('#results-box').removeClass('visible') &&\n//     $('#results-box').addClass('not-visible')\n//   }\n// });\n// const mealApi_res = new \n// let foodImg = document.getElementById('food-img')\n// console.log(foodImg)\n// foodImg.forEach((image) =>{\n//   let src = image.getAttribute('src'); \n//   let noImg = new Image();\n//   noImg.src = 'static/img/no-image-icon-23494.png'\n//   if (src === '') {\n// src = noImg;\n// }\n//   });\n// const sendMeal_name = (request_parameters) => {\n//       $.ajax({\n//         url: '/search',\n//         data: {\n//           'search_term': request_parameters,\n//         },\n//         dataType: 'json',\n//         success: (res)=>{\n//           console.log(res)\n//         },\n//         error: (err) => {\n//           console.log(err)\n//         }\n//       })\n//     }\n// mealNameSearch.on('keyup', function(){\n//   console.log($(this).val())\n//   const request_parameters = {\n//       search_term: $(this).val()\n//   }  \n//   if (resultsBox.hasClass('not-visible')){\n//     resultsBox.removeClass('not-visible')\n//   }\n//     sendMeal_name($(this).val())\n//     if (scheduled_funciton){\n//       clearTimeout(scheduled_function)\n//     }\n//     scheduled_function = setTimeout(sendMeal_name, delay_by_in_ms, endpoint1, request_parameters)\n//   });\n// let delayTimer;\n// $('#search-form').keyup(function() {\n//   console.log($('#search-form').val())\n//   $('#results_box').text($('#search-form').val())\n//   if (resultsBox.classList.contains('not-visible')){\n//     resultsBox.classList.remove('not-visible');\n//   }\n// clearTimeout(delayTimer);\n// let rb = $('#results_box').innerHTML\n// rb.text('Loading...');\n// delayTimer = setTimeout(function(){\n//   let text = $('#search-form').val()\n//   $.ajax({\n//     url: '/search',\n//     data: {\n//       'q': text,\n//     },\n//     dataType: 'json',\n//     success: (res)=>{\n//       console.log(res.data);\n//       results = $('#results_box').innerHTML \n//       rb = (res.data)\n//       if (Array.isArray(rb)) {rb.forEach(text => {\n//         results += `<div class='row mt-2 mb-2\">\n//           <div class='col-10'>\n//             <p class='h5'${rb}</p>\n//           </div>\n//         </div>`\n//       }\n//       )};\n// let results = '';\n// $('#results_box').text('');\n// // data[''].forEach(function(meal){\n// results += '<div class=\"row\";\n// res.forEach(function(meal){\n// })\n// // });\n// $('#results_box').append(results)\n// },\n// error: (err) => {\n//   console.log(err)\n// }\n//     });\n//   }, 1000);\n// });\n// mealNameSearch.addEventListener('keyup', e=>{\n//   console.log(e.target.value);\n//   if (resultsBox.classList.contains('not-visible')){\n//     resultsBox.classList.remove('not-visible')\n//   }\n//   sendMeal_name(e.target.value)\n// });\n// const sendMeal_name = (meal) =>{\n//     $.ajax({\n//       url: '/search',\n//       data: {\n//         'q': meal,\n//       },\n//       dataType: 'json',\n//       success: (res)=>{\n//         console.log(res)\n//       },\n//       error: (err) => {\n//         console.log(err)\n//       }\n//     })\n//   }\n// const csrf = document.getElementsByName('csrfmiddlewaretoken')[0].value\n// const url = window.location.href\n// console.log(url)\n// console.log(meal_searchbar)\n// console.log(searchIn)\n// console.log(searchForm)\n// console.log(csrf)\n// \n// if (resultsBox.classList.contains('not-visible')){\n//   resultsBox.classList.remove('not-visible')\n// }\n// sendMeal_name(e.target.value)\n// });\n// mealNameSearch.keyup(function(){\n//   clearTimeout(delayTimer);\n//   resultsBox.text('Loading....');\n//   delayTimer = setTimout(function(){\n//     $.ajax({\n//       datatype: 'json',\n//       url: 'meal/search',\n//       data: {\n//       'search_term': meal,\n//     },\n//     success: (res)=>{\n//       console.log(res)\n//     },\n//     error: (err) => {\n//       console.log(err)\n//     }\n//   });\n//   }, 1000);\n// });\n// ['change','keyup']meal_searchbar.addEventListener('keyup', e=>{\n//   console.log(e.target.value)\n// if (resultsBox.classList.contains('not-visible')){\n//   resultsBox.classList.remove('not-visible')\n// }\n// sendMeal_name(e.target.value)\n// });\n// const url2 = new URL('https://api.edamam.com/auto-complete')\n// function insertAfter(referenceNode, newNode){\n//   referenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n// }\n// app id d4531d9e\n// let food_api_id = document.createElement('input');\n// food_api_id.type = 'hidden';\n// food_api_id.name = 'app_id';\n// food_api_id.value = '{{ app_id | json_script: \"f_a_i\"}}';\n// food_api_id.setAttribute(\"id\", \"f_a_i\")\n// let food_app_id = document.getElementById(\"f_a_i\").value;\n// console.log(food_app_id);\n// console.log(food_app_id.length);\n// let food_aidStr = food_app_id.substring(0,4) + food_app_id.substring(11,15)\n// console.log(food_aidStr)\n// let food_api_key = document.getElementById(\"f_a_k\").value;\n// let food_keyStr = food_api_key.substring(6,40);\n// let food_key2Str = food_api_key.substring(6,40).replace(\"-\",\"\").replace(\"-\",\"\")\n// create logic for regex to replace the hyphens \n// console.log(food_keyStr)\n// console.log(food_key2Str)\n// let food_name = document.getElementById(\"search-input\").value;\n// console.log(food_api_key)\n// console.log(food_name)\n// let api_el = document.getElementById(\"f_a_i\").value;\n// console.log(food_api_id)\n//Create img element with a meal_logo id\n// let mealSearch = document.getElementById(\"kw_search\");\n//reference the parent node\n// let mealForm = document.getElementById(\"mealform\")\n// mealForm.innerHTML += `\n// <div class=\"search\">\n//     <form id=\"search-form\" autocomplete=\"off\">\n//     <input type=\"text\" id=\"search-input\" class=\"search2\">\n//     </form>\n// </div>`;\n// meal_searchbar.innerHTML += `<script>'{{ csrf_token }}'</script>`;\n// mealSearch.insertBefore(mealForm, mealSearch.childNodes[5]);\n// insertAfter(mealForm, mealSearch)\n// let csrf = document.createElement('input');\n// csrf.type = 'hidden';\n// csrf.name = 'csrfmiddlewaretoken';\n// csrf.value = '{% csrf_token %}';\n// csrf.setAttribute(\"id\", \"csrf\")\n// const sendMeal_name = (mealName) =>[\n//   $.ajax({\n//     type: 'POST',\n//     url: 'search/',\n//     data: {\n//         'q': mealName,\n//     },\n//     success: (res)=>{\n//       console.log(res)\n//     },\n//     error: (err) =>{\n//       console.log(err)\n//     }\n//   })\n// ]\n// let food_app_id = '{{app_id}}';\n// console.log(food_app_id)\n// let params = [['app_id',food_aidStr],['app_key',food_key2Str],['q','chi'],['limit',5]];\n// url.search = new URLSearchParams(params).toString();\n// fetch (url);\n\n//# sourceURL=webpack://self_proj/./LogMe_app/static/js/meal_log.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./LogMe_app/static/js/meal_log.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;